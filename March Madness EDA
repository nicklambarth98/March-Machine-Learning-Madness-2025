{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":91497,"databundleVersionId":11165145,"sourceType":"competition"}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:07.488756Z","iopub.execute_input":"2025-03-11T12:59:07.489222Z","iopub.status.idle":"2025-03-11T12:59:08.732481Z","shell.execute_reply.started":"2025-03-11T12:59:07.489176Z","shell.execute_reply":"2025-03-11T12:59:08.731267Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/march-machine-learning-mania-2025/Conferences.csv\n/kaggle/input/march-machine-learning-mania-2025/SeedBenchmarkStage1.csv\n/kaggle/input/march-machine-learning-mania-2025/WNCAATourneyDetailedResults.csv\n/kaggle/input/march-machine-learning-mania-2025/WRegularSeasonCompactResults.csv\n/kaggle/input/march-machine-learning-mania-2025/MNCAATourneySeedRoundSlots.csv\n/kaggle/input/march-machine-learning-mania-2025/MRegularSeasonDetailedResults.csv\n/kaggle/input/march-machine-learning-mania-2025/MNCAATourneyCompactResults.csv\n/kaggle/input/march-machine-learning-mania-2025/MGameCities.csv\n/kaggle/input/march-machine-learning-mania-2025/WSecondaryTourneyCompactResults.csv\n/kaggle/input/march-machine-learning-mania-2025/WGameCities.csv\n/kaggle/input/march-machine-learning-mania-2025/MSeasons.csv\n/kaggle/input/march-machine-learning-mania-2025/WNCAATourneySlots.csv\n/kaggle/input/march-machine-learning-mania-2025/MSecondaryTourneyTeams.csv\n/kaggle/input/march-machine-learning-mania-2025/SampleSubmissionStage2.csv\n/kaggle/input/march-machine-learning-mania-2025/Cities.csv\n/kaggle/input/march-machine-learning-mania-2025/MTeamSpellings.csv\n/kaggle/input/march-machine-learning-mania-2025/MRegularSeasonCompactResults.csv\n/kaggle/input/march-machine-learning-mania-2025/MMasseyOrdinals.csv\n/kaggle/input/march-machine-learning-mania-2025/MSecondaryTourneyCompactResults.csv\n/kaggle/input/march-machine-learning-mania-2025/WTeams.csv\n/kaggle/input/march-machine-learning-mania-2025/WConferenceTourneyGames.csv\n/kaggle/input/march-machine-learning-mania-2025/MNCAATourneySlots.csv\n/kaggle/input/march-machine-learning-mania-2025/MNCAATourneySeeds.csv\n/kaggle/input/march-machine-learning-mania-2025/WNCAATourneyCompactResults.csv\n/kaggle/input/march-machine-learning-mania-2025/WSeasons.csv\n/kaggle/input/march-machine-learning-mania-2025/WNCAATourneySeeds.csv\n/kaggle/input/march-machine-learning-mania-2025/MTeamCoaches.csv\n/kaggle/input/march-machine-learning-mania-2025/MConferenceTourneyGames.csv\n/kaggle/input/march-machine-learning-mania-2025/WRegularSeasonDetailedResults.csv\n/kaggle/input/march-machine-learning-mania-2025/MNCAATourneyDetailedResults.csv\n/kaggle/input/march-machine-learning-mania-2025/WTeamSpellings.csv\n/kaggle/input/march-machine-learning-mania-2025/MTeamConferences.csv\n/kaggle/input/march-machine-learning-mania-2025/MTeams.csv\n/kaggle/input/march-machine-learning-mania-2025/WTeamConferences.csv\n/kaggle/input/march-machine-learning-mania-2025/SampleSubmissionStage1.csv\n/kaggle/input/march-machine-learning-mania-2025/WSecondaryTourneyTeams.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"# Importing packages\nimport numpy as np \nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:08.733805Z","iopub.execute_input":"2025-03-11T12:59:08.734435Z","iopub.status.idle":"2025-03-11T12:59:10.415570Z","shell.execute_reply.started":"2025-03-11T12:59:08.734387Z","shell.execute_reply":"2025-03-11T12:59:10.414100Z"}},"outputs":[],"execution_count":2},{"cell_type":"markdown","source":"# EDA\n---\nThis notebook is exploring the data provided for the March Madness tournament.\nIt will be split into sections as follows:\n1. Exploring Mens and Womens Teams files\n2. Exploring Mens and Womens Teams 2025 information\n3. Exploring Ments and Womens Teams historical information\n\nKey points of interest to me is identifying any correlation between features. e.g. Do SEC teams win more regularly than other conferences? Do top 4 teams win more regularly than any other seed? Does teams offensive or defensive rating correlate most strongly with tournament and regular season wins? ","metadata":{}},{"cell_type":"markdown","source":"### Mens and Womens team data\n---","metadata":{}},{"cell_type":"code","source":"# Importing data\nm_teams = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/MTeams.csv\")\nw_teams = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/WTeams.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:10.416876Z","iopub.execute_input":"2025-03-11T12:59:10.417422Z","iopub.status.idle":"2025-03-11T12:59:10.439578Z","shell.execute_reply.started":"2025-03-11T12:59:10.417386Z","shell.execute_reply":"2025-03-11T12:59:10.438396Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"def basic_eda(df):\n    display(df.head())\n    display(df.describe())\n    display(df.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:10.441676Z","iopub.execute_input":"2025-03-11T12:59:10.442142Z","iopub.status.idle":"2025-03-11T12:59:10.446871Z","shell.execute_reply.started":"2025-03-11T12:59:10.442106Z","shell.execute_reply":"2025-03-11T12:59:10.445563Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"basic_eda(m_teams)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:10.448904Z","iopub.execute_input":"2025-03-11T12:59:10.449381Z","iopub.status.idle":"2025-03-11T12:59:10.518455Z","shell.execute_reply.started":"2025-03-11T12:59:10.449333Z","shell.execute_reply":"2025-03-11T12:59:10.517301Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"   TeamID     TeamName  FirstD1Season  LastD1Season\n0    1101  Abilene Chr           2014          2025\n1    1102    Air Force           1985          2025\n2    1103        Akron           1985          2025\n3    1104      Alabama           1985          2025\n4    1105  Alabama A&M           2000          2025","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TeamID</th>\n      <th>TeamName</th>\n      <th>FirstD1Season</th>\n      <th>LastD1Season</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1101</td>\n      <td>Abilene Chr</td>\n      <td>2014</td>\n      <td>2025</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1102</td>\n      <td>Air Force</td>\n      <td>1985</td>\n      <td>2025</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1103</td>\n      <td>Akron</td>\n      <td>1985</td>\n      <td>2025</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1104</td>\n      <td>Alabama</td>\n      <td>1985</td>\n      <td>2025</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1105</td>\n      <td>Alabama A&amp;M</td>\n      <td>2000</td>\n      <td>2025</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"            TeamID  FirstD1Season  LastD1Season\ncount   380.000000     380.000000    380.000000\nmean   1290.500000    1989.618421   2023.952632\nstd     109.840794       9.755814      5.686894\nmin    1101.000000    1985.000000   1985.000000\n25%    1195.750000    1985.000000   2025.000000\n50%    1290.500000    1985.000000   2025.000000\n75%    1385.250000    1986.250000   2025.000000\nmax    1480.000000    2025.000000   2025.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TeamID</th>\n      <th>FirstD1Season</th>\n      <th>LastD1Season</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>380.000000</td>\n      <td>380.000000</td>\n      <td>380.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1290.500000</td>\n      <td>1989.618421</td>\n      <td>2023.952632</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>109.840794</td>\n      <td>9.755814</td>\n      <td>5.686894</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1101.000000</td>\n      <td>1985.000000</td>\n      <td>1985.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1195.750000</td>\n      <td>1985.000000</td>\n      <td>2025.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1290.500000</td>\n      <td>1985.000000</td>\n      <td>2025.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1385.250000</td>\n      <td>1986.250000</td>\n      <td>2025.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1480.000000</td>\n      <td>2025.000000</td>\n      <td>2025.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(380, 4)"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"basic_eda(w_teams)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:10.519829Z","iopub.execute_input":"2025-03-11T12:59:10.520557Z","iopub.status.idle":"2025-03-11T12:59:10.541150Z","shell.execute_reply.started":"2025-03-11T12:59:10.520507Z","shell.execute_reply":"2025-03-11T12:59:10.539564Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"   TeamID     TeamName\n0    3101  Abilene Chr\n1    3102    Air Force\n2    3103        Akron\n3    3104      Alabama\n4    3105  Alabama A&M","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TeamID</th>\n      <th>TeamName</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3101</td>\n      <td>Abilene Chr</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3102</td>\n      <td>Air Force</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3103</td>\n      <td>Akron</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3104</td>\n      <td>Alabama</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3105</td>\n      <td>Alabama A&amp;M</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"            TeamID\ncount   378.000000\nmean   3290.465608\nstd     109.637116\nmin    3101.000000\n25%    3196.250000\n50%    3290.500000\n75%    3384.750000\nmax    3480.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TeamID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>378.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3290.465608</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>109.637116</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>3101.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>3196.250000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3290.500000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>3384.750000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3480.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(378, 2)"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"# getting any mens team where their last D1 season was before 2025\nnon_d1_m = m_teams.loc[m_teams[\"LastD1Season\"] < 2025]\ndisplay(non_d1_m.shape)\ndisplay(non_d1_m.head())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:10.542584Z","iopub.execute_input":"2025-03-11T12:59:10.543014Z","iopub.status.idle":"2025-03-11T12:59:10.564772Z","shell.execute_reply.started":"2025-03-11T12:59:10.542972Z","shell.execute_reply":"2025-03-11T12:59:10.563433Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"(16, 4)"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"    TeamID       TeamName  FirstD1Season  LastD1Season\n8     1109   Alliant Intl           1985          1991\n17    1118   Armstrong St           1987          1987\n20    1121        Augusta           1985          1991\n27    1128  Birmingham So           2003          2006\n33    1134       Brooklyn           1985          1992","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TeamID</th>\n      <th>TeamName</th>\n      <th>FirstD1Season</th>\n      <th>LastD1Season</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>8</th>\n      <td>1109</td>\n      <td>Alliant Intl</td>\n      <td>1985</td>\n      <td>1991</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1118</td>\n      <td>Armstrong St</td>\n      <td>1987</td>\n      <td>1987</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>1121</td>\n      <td>Augusta</td>\n      <td>1985</td>\n      <td>1991</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>1128</td>\n      <td>Birmingham So</td>\n      <td>2003</td>\n      <td>2006</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>1134</td>\n      <td>Brooklyn</td>\n      <td>1985</td>\n      <td>1992</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"markdown","source":"The non D1 teams will need to be excluded from all classification as they cannot compete in March Madness.  \nGames against these teams will still count towards any features engineered from historical data for competing teams.","metadata":{}},{"cell_type":"markdown","source":"### Men's and Women's Regular Season data\n---","metadata":{}},{"cell_type":"code","source":"#Importing regular season data\nm_reg_season_df = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/MRegularSeasonDetailedResults.csv\")\nw_reg_season_df = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/WRegularSeasonDetailedResults.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:10.565761Z","iopub.execute_input":"2025-03-11T12:59:10.566238Z","iopub.status.idle":"2025-03-11T12:59:11.369657Z","shell.execute_reply.started":"2025-03-11T12:59:10.566200Z","shell.execute_reply":"2025-03-11T12:59:11.368469Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"#Importing Seasons information - this contains information on which teams where which seed in each year\nm_seasons = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/MSeasons.csv\")\nw_seasons = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/WSeasons.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:11.370799Z","iopub.execute_input":"2025-03-11T12:59:11.371231Z","iopub.status.idle":"2025-03-11T12:59:11.386690Z","shell.execute_reply.started":"2025-03-11T12:59:11.371188Z","shell.execute_reply":"2025-03-11T12:59:11.385382Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"#Inspect mens teams 2025 data\nbasic_eda(m_reg_season_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:11.387853Z","iopub.execute_input":"2025-03-11T12:59:11.388437Z","iopub.status.idle":"2025-03-11T12:59:11.622967Z","shell.execute_reply.started":"2025-03-11T12:59:11.388384Z","shell.execute_reply":"2025-03-11T12:59:11.621790Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"   Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT  WFGM  WFGA  \\\n0    2003      10     1104      68     1328      62    N      0    27    58   \n1    2003      10     1272      70     1393      63    N      0    26    62   \n2    2003      11     1266      73     1437      61    N      0    24    58   \n3    2003      11     1296      56     1457      50    N      0    18    38   \n4    2003      11     1400      77     1208      71    N      0    30    61   \n\n   ...  LFGA3  LFTM  LFTA  LOR  LDR  LAst  LTO  LStl  LBlk  LPF  \n0  ...     10    16    22   10   22     8   18     9     2   20  \n1  ...     24     9    20   20   25     7   12     8     6   16  \n2  ...     26    14    23   31   22     9   12     2     5   23  \n3  ...     22     8    15   17   20     9   19     4     3   23  \n4  ...     16    17    27   21   15    12   10     7     1   14  \n\n[5 rows x 34 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Season</th>\n      <th>DayNum</th>\n      <th>WTeamID</th>\n      <th>WScore</th>\n      <th>LTeamID</th>\n      <th>LScore</th>\n      <th>WLoc</th>\n      <th>NumOT</th>\n      <th>WFGM</th>\n      <th>WFGA</th>\n      <th>...</th>\n      <th>LFGA3</th>\n      <th>LFTM</th>\n      <th>LFTA</th>\n      <th>LOR</th>\n      <th>LDR</th>\n      <th>LAst</th>\n      <th>LTO</th>\n      <th>LStl</th>\n      <th>LBlk</th>\n      <th>LPF</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2003</td>\n      <td>10</td>\n      <td>1104</td>\n      <td>68</td>\n      <td>1328</td>\n      <td>62</td>\n      <td>N</td>\n      <td>0</td>\n      <td>27</td>\n      <td>58</td>\n      <td>...</td>\n      <td>10</td>\n      <td>16</td>\n      <td>22</td>\n      <td>10</td>\n      <td>22</td>\n      <td>8</td>\n      <td>18</td>\n      <td>9</td>\n      <td>2</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2003</td>\n      <td>10</td>\n      <td>1272</td>\n      <td>70</td>\n      <td>1393</td>\n      <td>63</td>\n      <td>N</td>\n      <td>0</td>\n      <td>26</td>\n      <td>62</td>\n      <td>...</td>\n      <td>24</td>\n      <td>9</td>\n      <td>20</td>\n      <td>20</td>\n      <td>25</td>\n      <td>7</td>\n      <td>12</td>\n      <td>8</td>\n      <td>6</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2003</td>\n      <td>11</td>\n      <td>1266</td>\n      <td>73</td>\n      <td>1437</td>\n      <td>61</td>\n      <td>N</td>\n      <td>0</td>\n      <td>24</td>\n      <td>58</td>\n      <td>...</td>\n      <td>26</td>\n      <td>14</td>\n      <td>23</td>\n      <td>31</td>\n      <td>22</td>\n      <td>9</td>\n      <td>12</td>\n      <td>2</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2003</td>\n      <td>11</td>\n      <td>1296</td>\n      <td>56</td>\n      <td>1457</td>\n      <td>50</td>\n      <td>N</td>\n      <td>0</td>\n      <td>18</td>\n      <td>38</td>\n      <td>...</td>\n      <td>22</td>\n      <td>8</td>\n      <td>15</td>\n      <td>17</td>\n      <td>20</td>\n      <td>9</td>\n      <td>19</td>\n      <td>4</td>\n      <td>3</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2003</td>\n      <td>11</td>\n      <td>1400</td>\n      <td>77</td>\n      <td>1208</td>\n      <td>71</td>\n      <td>N</td>\n      <td>0</td>\n      <td>30</td>\n      <td>61</td>\n      <td>...</td>\n      <td>16</td>\n      <td>17</td>\n      <td>27</td>\n      <td>21</td>\n      <td>15</td>\n      <td>12</td>\n      <td>10</td>\n      <td>7</td>\n      <td>1</td>\n      <td>14</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 34 columns</p>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"              Season         DayNum        WTeamID         WScore  \\\ncount  118449.000000  118449.000000  118449.000000  118449.000000   \nmean     2014.210589      70.549671    1288.245633      75.896082   \nstd         6.549741      35.820254     105.366292      10.998775   \nmin      2003.000000       0.000000    1101.000000      34.000000   \n25%      2009.000000      40.000000    1199.000000      68.000000   \n50%      2014.000000      74.000000    1287.000000      75.000000   \n75%      2020.000000     101.000000    1381.000000      83.000000   \nmax      2025.000000     132.000000    1480.000000     149.000000   \n\n             LTeamID         LScore          NumOT           WFGM  \\\ncount  118449.000000  118449.000000  118449.000000  118449.000000   \nmean     1283.206443      63.909607       0.068679      26.409442   \nstd       104.825454      10.848449       0.304940       4.680629   \nmin      1101.000000      20.000000       0.000000      10.000000   \n25%      1192.000000      57.000000       0.000000      23.000000   \n50%      1282.000000      64.000000       0.000000      26.000000   \n75%      1374.000000      71.000000       0.000000      29.000000   \nmax      1480.000000     144.000000       6.000000      57.000000   \n\n                WFGA          WFGM3  ...          LFGA3           LFTM  \\\ncount  118449.000000  118449.000000  ...  118449.000000  118449.000000   \nmean       55.772966       7.353663  ...      20.174556      12.075222   \nstd         7.453264       3.121409  ...       6.070007       5.345344   \nmin        26.000000       0.000000  ...       1.000000       0.000000   \n25%        51.000000       5.000000  ...      16.000000       8.000000   \n50%        55.000000       7.000000  ...      20.000000      12.000000   \n75%        60.000000       9.000000  ...      24.000000      15.000000   \nmax       103.000000      26.000000  ...      59.000000      48.000000   \n\n                LFTA            LOR            LDR           LAst  \\\ncount  118449.000000  118449.000000  118449.000000  118449.000000   \nmean       17.729884      10.448269      21.620461      11.412566   \nstd         7.079977       4.220904       4.517016       3.724863   \nmin         0.000000       0.000000       4.000000       0.000000   \n25%        13.000000       7.000000      19.000000       9.000000   \n50%        17.000000      10.000000      21.000000      11.000000   \n75%        22.000000      13.000000      25.000000      14.000000   \nmax        65.000000      36.000000      49.000000      31.000000   \n\n                 LTO           LStl           LBlk            LPF  \ncount  118449.000000  118449.000000  118449.000000  118449.000000  \nmean       13.873405       6.005251       2.868686      19.293240  \nstd         4.384160       2.745486       2.018115       4.554376  \nmin         0.000000       0.000000       0.000000       4.000000  \n25%        11.000000       4.000000       1.000000      16.000000  \n50%        14.000000       6.000000       3.000000      19.000000  \n75%        17.000000       8.000000       4.000000      22.000000  \nmax        41.000000      22.000000      18.000000      45.000000  \n\n[8 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Season</th>\n      <th>DayNum</th>\n      <th>WTeamID</th>\n      <th>WScore</th>\n      <th>LTeamID</th>\n      <th>LScore</th>\n      <th>NumOT</th>\n      <th>WFGM</th>\n      <th>WFGA</th>\n      <th>WFGM3</th>\n      <th>...</th>\n      <th>LFGA3</th>\n      <th>LFTM</th>\n      <th>LFTA</th>\n      <th>LOR</th>\n      <th>LDR</th>\n      <th>LAst</th>\n      <th>LTO</th>\n      <th>LStl</th>\n      <th>LBlk</th>\n      <th>LPF</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>...</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n      <td>118449.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2014.210589</td>\n      <td>70.549671</td>\n      <td>1288.245633</td>\n      <td>75.896082</td>\n      <td>1283.206443</td>\n      <td>63.909607</td>\n      <td>0.068679</td>\n      <td>26.409442</td>\n      <td>55.772966</td>\n      <td>7.353663</td>\n      <td>...</td>\n      <td>20.174556</td>\n      <td>12.075222</td>\n      <td>17.729884</td>\n      <td>10.448269</td>\n      <td>21.620461</td>\n      <td>11.412566</td>\n      <td>13.873405</td>\n      <td>6.005251</td>\n      <td>2.868686</td>\n      <td>19.293240</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>6.549741</td>\n      <td>35.820254</td>\n      <td>105.366292</td>\n      <td>10.998775</td>\n      <td>104.825454</td>\n      <td>10.848449</td>\n      <td>0.304940</td>\n      <td>4.680629</td>\n      <td>7.453264</td>\n      <td>3.121409</td>\n      <td>...</td>\n      <td>6.070007</td>\n      <td>5.345344</td>\n      <td>7.079977</td>\n      <td>4.220904</td>\n      <td>4.517016</td>\n      <td>3.724863</td>\n      <td>4.384160</td>\n      <td>2.745486</td>\n      <td>2.018115</td>\n      <td>4.554376</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>2003.000000</td>\n      <td>0.000000</td>\n      <td>1101.000000</td>\n      <td>34.000000</td>\n      <td>1101.000000</td>\n      <td>20.000000</td>\n      <td>0.000000</td>\n      <td>10.000000</td>\n      <td>26.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>4.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2009.000000</td>\n      <td>40.000000</td>\n      <td>1199.000000</td>\n      <td>68.000000</td>\n      <td>1192.000000</td>\n      <td>57.000000</td>\n      <td>0.000000</td>\n      <td>23.000000</td>\n      <td>51.000000</td>\n      <td>5.000000</td>\n      <td>...</td>\n      <td>16.000000</td>\n      <td>8.000000</td>\n      <td>13.000000</td>\n      <td>7.000000</td>\n      <td>19.000000</td>\n      <td>9.000000</td>\n      <td>11.000000</td>\n      <td>4.000000</td>\n      <td>1.000000</td>\n      <td>16.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2014.000000</td>\n      <td>74.000000</td>\n      <td>1287.000000</td>\n      <td>75.000000</td>\n      <td>1282.000000</td>\n      <td>64.000000</td>\n      <td>0.000000</td>\n      <td>26.000000</td>\n      <td>55.000000</td>\n      <td>7.000000</td>\n      <td>...</td>\n      <td>20.000000</td>\n      <td>12.000000</td>\n      <td>17.000000</td>\n      <td>10.000000</td>\n      <td>21.000000</td>\n      <td>11.000000</td>\n      <td>14.000000</td>\n      <td>6.000000</td>\n      <td>3.000000</td>\n      <td>19.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2020.000000</td>\n      <td>101.000000</td>\n      <td>1381.000000</td>\n      <td>83.000000</td>\n      <td>1374.000000</td>\n      <td>71.000000</td>\n      <td>0.000000</td>\n      <td>29.000000</td>\n      <td>60.000000</td>\n      <td>9.000000</td>\n      <td>...</td>\n      <td>24.000000</td>\n      <td>15.000000</td>\n      <td>22.000000</td>\n      <td>13.000000</td>\n      <td>25.000000</td>\n      <td>14.000000</td>\n      <td>17.000000</td>\n      <td>8.000000</td>\n      <td>4.000000</td>\n      <td>22.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2025.000000</td>\n      <td>132.000000</td>\n      <td>1480.000000</td>\n      <td>149.000000</td>\n      <td>1480.000000</td>\n      <td>144.000000</td>\n      <td>6.000000</td>\n      <td>57.000000</td>\n      <td>103.000000</td>\n      <td>26.000000</td>\n      <td>...</td>\n      <td>59.000000</td>\n      <td>48.000000</td>\n      <td>65.000000</td>\n      <td>36.000000</td>\n      <td>49.000000</td>\n      <td>31.000000</td>\n      <td>41.000000</td>\n      <td>22.000000</td>\n      <td>18.000000</td>\n      <td>45.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 33 columns</p>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(118449, 34)"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"#Inspect mens teams 2025 data\nbasic_eda(w_reg_season_df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:11.624086Z","iopub.execute_input":"2025-03-11T12:59:11.624400Z","iopub.status.idle":"2025-03-11T12:59:11.808342Z","shell.execute_reply.started":"2025-03-11T12:59:11.624370Z","shell.execute_reply":"2025-03-11T12:59:11.807187Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"   Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT  WFGM  WFGA  \\\n0    2010      11     3103      63     3237      49    H      0    23    54   \n1    2010      11     3104      73     3399      68    N      0    26    62   \n2    2010      11     3110      71     3224      59    A      0    29    62   \n3    2010      11     3111      63     3267      58    A      0    27    52   \n4    2010      11     3119      74     3447      70    H      1    30    74   \n\n   ...  LFGA3  LFTM  LFTA  LOR  LDR  LAst  LTO  LStl  LBlk  LPF  \n0  ...     13     6    10   11   27    11   23     7     6   19  \n1  ...     21    14    27   14   26     7   20     4     2   27  \n2  ...     14    19    23   17   23     8   15     6     0   15  \n3  ...     26    16    25   22   22    15   11    14     5   14  \n4  ...     17    11    21   21   32    12   14     4     2   14  \n\n[5 rows x 34 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Season</th>\n      <th>DayNum</th>\n      <th>WTeamID</th>\n      <th>WScore</th>\n      <th>LTeamID</th>\n      <th>LScore</th>\n      <th>WLoc</th>\n      <th>NumOT</th>\n      <th>WFGM</th>\n      <th>WFGA</th>\n      <th>...</th>\n      <th>LFGA3</th>\n      <th>LFTM</th>\n      <th>LFTA</th>\n      <th>LOR</th>\n      <th>LDR</th>\n      <th>LAst</th>\n      <th>LTO</th>\n      <th>LStl</th>\n      <th>LBlk</th>\n      <th>LPF</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2010</td>\n      <td>11</td>\n      <td>3103</td>\n      <td>63</td>\n      <td>3237</td>\n      <td>49</td>\n      <td>H</td>\n      <td>0</td>\n      <td>23</td>\n      <td>54</td>\n      <td>...</td>\n      <td>13</td>\n      <td>6</td>\n      <td>10</td>\n      <td>11</td>\n      <td>27</td>\n      <td>11</td>\n      <td>23</td>\n      <td>7</td>\n      <td>6</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2010</td>\n      <td>11</td>\n      <td>3104</td>\n      <td>73</td>\n      <td>3399</td>\n      <td>68</td>\n      <td>N</td>\n      <td>0</td>\n      <td>26</td>\n      <td>62</td>\n      <td>...</td>\n      <td>21</td>\n      <td>14</td>\n      <td>27</td>\n      <td>14</td>\n      <td>26</td>\n      <td>7</td>\n      <td>20</td>\n      <td>4</td>\n      <td>2</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2010</td>\n      <td>11</td>\n      <td>3110</td>\n      <td>71</td>\n      <td>3224</td>\n      <td>59</td>\n      <td>A</td>\n      <td>0</td>\n      <td>29</td>\n      <td>62</td>\n      <td>...</td>\n      <td>14</td>\n      <td>19</td>\n      <td>23</td>\n      <td>17</td>\n      <td>23</td>\n      <td>8</td>\n      <td>15</td>\n      <td>6</td>\n      <td>0</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2010</td>\n      <td>11</td>\n      <td>3111</td>\n      <td>63</td>\n      <td>3267</td>\n      <td>58</td>\n      <td>A</td>\n      <td>0</td>\n      <td>27</td>\n      <td>52</td>\n      <td>...</td>\n      <td>26</td>\n      <td>16</td>\n      <td>25</td>\n      <td>22</td>\n      <td>22</td>\n      <td>15</td>\n      <td>11</td>\n      <td>14</td>\n      <td>5</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2010</td>\n      <td>11</td>\n      <td>3119</td>\n      <td>74</td>\n      <td>3447</td>\n      <td>70</td>\n      <td>H</td>\n      <td>1</td>\n      <td>30</td>\n      <td>74</td>\n      <td>...</td>\n      <td>17</td>\n      <td>11</td>\n      <td>21</td>\n      <td>21</td>\n      <td>32</td>\n      <td>12</td>\n      <td>14</td>\n      <td>4</td>\n      <td>2</td>\n      <td>14</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 34 columns</p>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"             Season        DayNum       WTeamID        WScore       LTeamID  \\\ncount  81308.000000  81308.000000  81308.000000  81308.000000  81308.000000   \nmean    2017.468318     69.550241   3285.186894     71.709819   3286.704679   \nstd        4.615675     36.227649    104.107769     11.530594    105.536419   \nmin     2010.000000      0.000000   3101.000000     30.000000   3101.000000   \n25%     2013.000000     36.000000   3196.000000     64.000000   3195.000000   \n50%     2017.000000     73.000000   3283.000000     71.000000   3287.000000   \n75%     2022.000000    101.000000   3376.000000     79.000000   3377.000000   \nmax     2025.000000    132.000000   3480.000000    140.000000   3480.000000   \n\n             LScore         NumOT          WFGM          WFGA         WFGM3  \\\ncount  81308.000000  81308.000000  81308.000000  81308.000000  81308.000000   \nmean      57.256863      0.051668     25.848404     58.961394      6.282026   \nstd       10.960070      0.258900      4.975658      7.964430      3.127561   \nmin       11.000000      0.000000      9.000000     30.000000      0.000000   \n25%       50.000000      0.000000     22.000000     53.000000      4.000000   \n50%       57.000000      0.000000     25.000000     59.000000      6.000000   \n75%       64.000000      0.000000     29.000000     64.000000      8.000000   \nmax      130.000000      5.000000     58.000000    113.000000     30.000000   \n\n       ...         LFGA3          LFTM          LFTA           LOR  \\\ncount  ...  81308.000000  81308.000000  81308.000000  81308.000000   \nmean   ...     17.925948     10.505817     15.497307     11.336055   \nstd    ...      6.455980      4.935924      6.628322      4.640504   \nmin    ...      0.000000      0.000000      0.000000      0.000000   \n25%    ...     13.000000      7.000000     11.000000      8.000000   \n50%    ...     17.000000     10.000000     15.000000     11.000000   \n75%    ...     22.000000     14.000000     20.000000     14.000000   \nmax    ...     80.000000     37.000000     52.000000     38.000000   \n\n                LDR          LAst           LTO          LStl          LBlk  \\\ncount  81308.000000  81308.000000  81308.000000  81308.000000  81308.000000   \nmean      22.409455     10.937226     17.134698      7.108931      2.819661   \nstd        4.935062      3.806010      5.275693      3.191368      2.062459   \nmin        1.000000      0.000000      1.000000      0.000000      0.000000   \n25%       19.000000      8.000000     13.000000      5.000000      1.000000   \n50%       22.000000     11.000000     17.000000      7.000000      2.000000   \n75%       26.000000     13.000000     20.000000      9.000000      4.000000   \nmax       53.000000     34.000000     49.000000     26.000000     21.000000   \n\n                LPF  \ncount  81308.000000  \nmean      18.183832  \nstd        4.556114  \nmin        3.000000  \n25%       15.000000  \n50%       18.000000  \n75%       21.000000  \nmax       47.000000  \n\n[8 rows x 33 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Season</th>\n      <th>DayNum</th>\n      <th>WTeamID</th>\n      <th>WScore</th>\n      <th>LTeamID</th>\n      <th>LScore</th>\n      <th>NumOT</th>\n      <th>WFGM</th>\n      <th>WFGA</th>\n      <th>WFGM3</th>\n      <th>...</th>\n      <th>LFGA3</th>\n      <th>LFTM</th>\n      <th>LFTA</th>\n      <th>LOR</th>\n      <th>LDR</th>\n      <th>LAst</th>\n      <th>LTO</th>\n      <th>LStl</th>\n      <th>LBlk</th>\n      <th>LPF</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>...</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n      <td>81308.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2017.468318</td>\n      <td>69.550241</td>\n      <td>3285.186894</td>\n      <td>71.709819</td>\n      <td>3286.704679</td>\n      <td>57.256863</td>\n      <td>0.051668</td>\n      <td>25.848404</td>\n      <td>58.961394</td>\n      <td>6.282026</td>\n      <td>...</td>\n      <td>17.925948</td>\n      <td>10.505817</td>\n      <td>15.497307</td>\n      <td>11.336055</td>\n      <td>22.409455</td>\n      <td>10.937226</td>\n      <td>17.134698</td>\n      <td>7.108931</td>\n      <td>2.819661</td>\n      <td>18.183832</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>4.615675</td>\n      <td>36.227649</td>\n      <td>104.107769</td>\n      <td>11.530594</td>\n      <td>105.536419</td>\n      <td>10.960070</td>\n      <td>0.258900</td>\n      <td>4.975658</td>\n      <td>7.964430</td>\n      <td>3.127561</td>\n      <td>...</td>\n      <td>6.455980</td>\n      <td>4.935924</td>\n      <td>6.628322</td>\n      <td>4.640504</td>\n      <td>4.935062</td>\n      <td>3.806010</td>\n      <td>5.275693</td>\n      <td>3.191368</td>\n      <td>2.062459</td>\n      <td>4.556114</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>2010.000000</td>\n      <td>0.000000</td>\n      <td>3101.000000</td>\n      <td>30.000000</td>\n      <td>3101.000000</td>\n      <td>11.000000</td>\n      <td>0.000000</td>\n      <td>9.000000</td>\n      <td>30.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2013.000000</td>\n      <td>36.000000</td>\n      <td>3196.000000</td>\n      <td>64.000000</td>\n      <td>3195.000000</td>\n      <td>50.000000</td>\n      <td>0.000000</td>\n      <td>22.000000</td>\n      <td>53.000000</td>\n      <td>4.000000</td>\n      <td>...</td>\n      <td>13.000000</td>\n      <td>7.000000</td>\n      <td>11.000000</td>\n      <td>8.000000</td>\n      <td>19.000000</td>\n      <td>8.000000</td>\n      <td>13.000000</td>\n      <td>5.000000</td>\n      <td>1.000000</td>\n      <td>15.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2017.000000</td>\n      <td>73.000000</td>\n      <td>3283.000000</td>\n      <td>71.000000</td>\n      <td>3287.000000</td>\n      <td>57.000000</td>\n      <td>0.000000</td>\n      <td>25.000000</td>\n      <td>59.000000</td>\n      <td>6.000000</td>\n      <td>...</td>\n      <td>17.000000</td>\n      <td>10.000000</td>\n      <td>15.000000</td>\n      <td>11.000000</td>\n      <td>22.000000</td>\n      <td>11.000000</td>\n      <td>17.000000</td>\n      <td>7.000000</td>\n      <td>2.000000</td>\n      <td>18.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2022.000000</td>\n      <td>101.000000</td>\n      <td>3376.000000</td>\n      <td>79.000000</td>\n      <td>3377.000000</td>\n      <td>64.000000</td>\n      <td>0.000000</td>\n      <td>29.000000</td>\n      <td>64.000000</td>\n      <td>8.000000</td>\n      <td>...</td>\n      <td>22.000000</td>\n      <td>14.000000</td>\n      <td>20.000000</td>\n      <td>14.000000</td>\n      <td>26.000000</td>\n      <td>13.000000</td>\n      <td>20.000000</td>\n      <td>9.000000</td>\n      <td>4.000000</td>\n      <td>21.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2025.000000</td>\n      <td>132.000000</td>\n      <td>3480.000000</td>\n      <td>140.000000</td>\n      <td>3480.000000</td>\n      <td>130.000000</td>\n      <td>5.000000</td>\n      <td>58.000000</td>\n      <td>113.000000</td>\n      <td>30.000000</td>\n      <td>...</td>\n      <td>80.000000</td>\n      <td>37.000000</td>\n      <td>52.000000</td>\n      <td>38.000000</td>\n      <td>53.000000</td>\n      <td>34.000000</td>\n      <td>49.000000</td>\n      <td>26.000000</td>\n      <td>21.000000</td>\n      <td>47.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 33 columns</p>\n</div>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"(81308, 34)"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"w_reg_season_df.columns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T12:59:11.809570Z","iopub.execute_input":"2025-03-11T12:59:11.810213Z","iopub.status.idle":"2025-03-11T12:59:11.816997Z","shell.execute_reply.started":"2025-03-11T12:59:11.810145Z","shell.execute_reply":"2025-03-11T12:59:11.815704Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"Index(['Season', 'DayNum', 'WTeamID', 'WScore', 'LTeamID', 'LScore', 'WLoc',\n       'NumOT', 'WFGM', 'WFGA', 'WFGM3', 'WFGA3', 'WFTM', 'WFTA', 'WOR', 'WDR',\n       'WAst', 'WTO', 'WStl', 'WBlk', 'WPF', 'LFGM', 'LFGA', 'LFGM3', 'LFGA3',\n       'LFTM', 'LFTA', 'LOR', 'LDR', 'LAst', 'LTO', 'LStl', 'LBlk', 'LPF'],\n      dtype='object')"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"#plotting average regular season winner score, per year. Men and Womens on same plot\nm_winner_score_year = m_reg_season_df.groupby(['Season'])[\"WScore\"].agg(\"mean\")\nw_winner_score_year = w_reg_season_df.groupby(['Season'])[\"WScore\"].agg(\"mean\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T13:15:49.426282Z","iopub.execute_input":"2025-03-11T13:15:49.426669Z","iopub.status.idle":"2025-03-11T13:15:49.438147Z","shell.execute_reply.started":"2025-03-11T13:15:49.426640Z","shell.execute_reply":"2025-03-11T13:15:49.437136Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"m_winner_score_year.plot()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T13:15:52.355602Z","iopub.execute_input":"2025-03-11T13:15:52.356140Z","iopub.status.idle":"2025-03-11T13:15:52.577564Z","shell.execute_reply.started":"2025-03-11T13:15:52.356090Z","shell.execute_reply":"2025-03-11T13:15:52.576379Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='Season'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"w_winner_score_year.plot()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-11T13:15:59.890692Z","iopub.execute_input":"2025-03-11T13:15:59.891192Z","iopub.status.idle":"2025-03-11T13:16:00.108899Z","shell.execute_reply.started":"2025-03-11T13:15:59.891155Z","shell.execute_reply":"2025-03-11T13:16:00.107817Z"}},"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='Season'>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"#plotting average loser score, per year ","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#plotting proportion of winners that were the home team, per year","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#function to plot change in box score stats over time\ndef plot_change_stat(df,col_name):\n    #group by year\n    ","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#filtering data to just 2025 ","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Importing tournament data\nm_tournament_df = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/MRegularSeasonDetailedResults.csv\")\nw_reg_season_df = pd.read_csv(\"/kaggle/input/march-machine-learning-mania-2025/WRegularSeasonDetailedResults.csv\")","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}